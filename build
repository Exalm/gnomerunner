#!/bin/bash

rm temp -rf
mkdir temp
cp install.rdf temp
cp theme temp -r
cp options temp -r
cp icon.png temp/theme
cp icon.png temp/options
cd temp

#Substitute variables
while read LINE; do
    if [[ $LINE != [A-Z]* ]]; then
        continue
    fi
    LINE1=`echo $LINE | grep -oE "^[^=]+"`
    LINE2=`echo $LINE | grep -oE "[^=]+$"`
    sed "s|\$$LINE1|$LINE2|g" -i `find . -name "*.rdf"` `find . -name "*.js"` `find . -name "*.css"` `find . -name "*.manifest"`
    eval "$LINE1=\"$LINE2\""
done < "../config.txt"

#Generate options.xul and bootstrap.js pref array
cd options
READING=0
OPTIONS_XUL="<?xml version=\"1.0\"?>\n\n<vbox xmlns=\"http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul\">\n"
while read -r LINE; do
    if [[ $LINE == "" ]]; then
        READING=0
        OPTIONS_XUL="$OPTIONS_XUL<setting type=\"$TEMP_OPTION_TYPE\" pref=\"$OPTIONS_PREF_BRANCH$TEMP_OPTION_PREF\" title=\"$TEMP_OPTION_NAME\""
        if [[ $TEMP_OPTION_DESC != "" ]]; then
            OPTIONS_XUL="$OPTIONS_XUL desc=\"$TEMP_OPTION_DESC\""
        fi
        if [[ $TEMP_OPTION_CONTENT == "" ]]; then
            OPTIONS_XUL="$OPTIONS_XUL />\n"
        else
            OPTIONS_XUL="$OPTIONS_XUL>$TEMP_OPTION_CONTENT\n</setting>\n"
        fi
        if [[ $PREFS_ARRAY == "" ]]; then
            PREFS_ARRAY="[\"$TEMP_OPTION_PREF\""
        else
            PREFS_ARRAY="$PREFS_ARRAY, \"$TEMP_OPTION_PREF\""
        fi
        if [[ $TEMP_OPTION_MAX != "" ]]; then
            PREFS_MAXVALUE="$PREFS_MAXVALUE\n    if (data == \"$TEMP_OPTION_PREF\"){\n        return $TEMP_OPTION_MAX;\n    }"
        fi
        DEFAULTS="${DEFAULTS}pref(\"$OPTIONS_PREF_BRANCH$TEMP_OPTION_PREF\", $TEMP_OPTION_DEFAULT);\n"
        TEMP_OPTION_CONTENT=""
        TEMP_OPTION_TYPE=""
        TEMP_OPTION_PREF=""
        TEMP_OPTION_NAME=""
        TEMP_OPTION_DESC=""
        TEMP_OPTION_MAX=""
        TEMP_OPTION_DEFAULT=""
    fi
    if [[ $LINE == [^\<]*=* ]]; then
        LINE1=`echo $LINE | grep -oE "^[^=]+"`
        LINE2=`echo $LINE | grep -oE "[^=]+$"`
        eval "TEMP_OPTION_$LINE1=\"$LINE2\""
    else
        if [[ $READING == "0" ]]; then
            TEMP_OPTION_CONTENT=$LINE
            READING=1
            continue
        fi
        TEMP_OPTION_CONTENT="$TEMP_OPTION_CONTENT\n$LINE"
    fi
done < "options.txt"
OPTIONS_XUL="$OPTIONS_XUL</vbox>\n"
echo -e $OPTIONS_XUL > options.xul
rm options.txt
PREFS_ARRAY="$PREFS_ARRAY]"
sed "s|\$PREFS_ARRAY|$PREFS_ARRAY|g" -i bootstrap.js
PREFS_MAXVALUE="${PREFS_MAXVALUE:2}"
sed "s|\$PREFS_MAXVALUE|$PREFS_MAXVALUE|g" -i bootstrap.js
mkdir -p defaults/preferences
echo -e $DEFAULTS > defaults/preferences/defaults.js
cd ..

#Generate menu icon rules
ORIG="\%NATIVE-ICON (.*) (.*)"
NEW="\2:-moz-system-metric(images-in-menus) > label {\n"
NEW+="    padding-left: 21px !important;\n"
NEW+="    margin-left: 0px !important;\n"
NEW+="}\n\n\2 {\n"
NEW+="    list-style-image: url(\"moz-icon://stock/\1?size=menu\") !important;\n"
NEW+="}\n\n\2:-moz-system-metric(images-in-menus) > label {\n"
NEW+="    background: url(\"moz-icon://stock/\1?size=menu\") 0% 50% no-repeat !important;\n"
NEW+="}\n\n\2:-moz-system-metric(images-in-menus)[disabled=\"true\"] > label {\n"
NEW+="    background: url(\"moz-icon://stock/\1?size=menu\&state=disabled\") 0% 50% no-repeat !important;\n"
NEW+="}\n"
sed -E "s|$ORIG|$NEW|g" -i `find . -name "*.css"`

ORIG="\%ICON \"(.*)\" (.*)"
NEW="\2:-moz-system-metric(images-in-menus) > label {\n"
NEW+="    padding-left: 21px !important;\n"
NEW+="    margin-left: 0px !important;\n"
NEW+="}\n\n\2 {\n"
NEW+="    list-style-image: url(\"\1\") !important;\n"
NEW+="}\n\n\2:-moz-system-metric(images-in-menus) > label {\n"
NEW+="    background: url(\"\1\") 0% 50% no-repeat !important;\n"
NEW+="}\n"
sed -E "s|$ORIG|$NEW|g" -i `find . -name "*.css"`

#ORIG="\%NATIVE-ICON (.*) (.*)"
#NEW="\2 {\n"
#NEW+="    -moz-binding: url(\"chrome://global/content/bindings/menu.xml#menuitem-iconic\") !important;\n"
#NEW+="    list-style-image: url(\"moz-icon://stock/\1?size=menu\") !important;\n"
#NEW+="}\n"
#sed -E "s|$ORIG|$NEW|g" -i `find . -name "*.css"`

#ORIG="\%ICON \"(.*)\" (.*)"
#NEW="\2 {\n"
#NEW+="    -moz-binding: url(\"chrome://global/content/bindings/menu.xml#menuitem-iconic\") !important;\n"
#NEW+="    list-style-image: url(\"\1\") !important;\n"
#NEW+="}\n"
#sed -E "s|$ORIG|$NEW|g" -i `find . -name "*.css"`

#Generate options/content/freedesktopicons.css
function appendToFdCss() {
    DISABLED=""
    SELECTOR="$4"
    if [[ $4 == "disabled" ]]; then
        DISABLED="&state=$4"
        SELECTOR="$5"
    fi
    RULE="$SELECTOR {\n"
    RULE="$RULE    $1: url(\"moz-icon://stock/$2?size=$3$DISABLED\") !important;\n"
    RULE="$RULE}\n"
    echo -e $RULE >> "options/content/freedesktopicons.css"
}

echo -e "@namespace url(http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul);\n" > "options/content/freedesktopicons.css"
FILES=`find theme -name "*.css"`
for F in $FILES; do
    PLACEHOLDER[1]="%STOCK-ICON-BG"
    PLACEHOLDER[2]="%STOCK-ICON"
    PLACEHOLDER[3]="%CUSTOM-ICON-BG"
    PLACEHOLDER[4]="%CUSTOM-ICON"
    TAG[1]="background-image"
    TAG[2]="list-style-image"
    TAG[3]=${TAG[1]}
    TAG[4]=${TAG[2]}
    LENGTH[1]=15
    LENGTH[2]=12
    LENGTH[3]=16
    LENGTH[4]=13
    for I in 1 2 3 4; do
        NUM=`grep -c "${PLACEHOLDER[$I]}" $F`
        if (( $NUM > 0 )); then
            for J in `seq -w 1 $NUM`; do
                SELECTOR=`grep -Pzom 1 "(.*[\,\{] *\n)+(.*;.*\n)*.*${PLACEHOLDER[$I]}" $F`
                SELECTOR=`echo $SELECTOR | grep -oE "^[^{]+"`
                LINE=`grep -m 1 "${PLACEHOLDER[$I]}" $F`
                LINE=`echo $LINE | sed -E "s/^ +//"`
                LINE=${LINE:${LENGTH[$I]}}
                LINE1=`echo $LINE | grep -oE "^[^ ]+"`
                if (( $I < 3 )); then
                    ORIG="${PLACEHOLDER[$I]} ($LINE1) .+ ([0-9]+) ?(disabled)?( \!important)?"
                    NEW="${TAG[$I]}: url(\"moz-icon:\/\/stock\/\1?size=\2\&state=\3\")\4;"
                else
                    ORIG="${PLACEHOLDER[$I]} ($LINE1) ([0-9]+) ?(disabled)?( \!important)?"
                    NEW="${TAG[$I]}: url(\"chrome:\/\/global\/skin\/icons\/\2x\2\/\1.png\")\4;"
                fi
                sed -E "0,/$ORIG/s/$ORIG/$NEW/" -i $F
                if (( $I < 3 )); then
                    LINE2=`echo $LINE | grep -oE " .+$"`
                    LINE2=${LINE2:1}
                else
                    LINE2=$LINE
                fi
                appendToFdCss "${TAG[$I]}" $LINE2 "$SELECTOR"
            done
        fi
    done
    sed -E "s/size=16/size=menu/g" -i $F
    sed -E "s/size=24/size=toolbar/g" -i $F
    sed -E "s/size=48/size=dialog/g" -i $F
    sed -E "s/&state=\"/\"/g" -i $F
done
sed -E "s/size=16/size=menu/g" -i "options/content/freedesktopicons.css"
sed -E "s/size=24/size=toolbar/g" -i "options/content/freedesktopicons.css"
sed -E "s/size=48/size=dialog/g" -i "options/content/freedesktopicons.css"

NAME1="theme.jar"
NAME2="options.xpi"
NAME="gnomerunner_gtk_revived-$VERSION-sm-linux.xpi"
cd theme
zip ../$NAME1 * -qr
cd ../options
zip ../$NAME2 * -qr
cd ..
zip ../$NAME *.xpi *.jar *.rdf -q
cd ..
